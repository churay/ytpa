/**
 * @file lib.js
 *
 * A library script that contains a collection of basic library functions used
 * by the various components on the "ytpa" tool.
 */

( function(ytpa, $, undefined) {
    /// Public Members ///

    ytpa.lib = ytpa.lib || {};

    /**
     * Clamps the first value to the (min, max) range defined by the second
     * and third values.
     */
    ytpa.lib.clamp = function(value, min, max) {
        return Math.min(Math.max(value, min), max);
    };

    /**
     * Generates a number list from the first value to the second value where
     * each intermediate value is generated by taking the step given in third
     * value.
     *
     * @see http://stackoverflow.com/a/3895618
     */
    ytpa.lib.range = function(start, end, step) {
        var step = (step !== undefined) ? step : 1;

        var rangeArray = [];
        var currValue = start;
        while(currValue < end) {
            rangeArray.push(currValue);
            currValue += step;
        }

        return rangeArray;
    };

    /**
     * Generates a string that represents a comma-separated version of the
     * given number.
     */
    ytpa.lib.formatnumber = function(number) {
        return numberFormatter.format(number);
    };

    /// Private Members ///

    /** The object responsible for formatting all of the numbers. */
    var numberFormatter = new Intl.NumberFormat();

}(window.ytpa = window.ytpa || {}, jQuery) );
