/**
 * @file lib.js
 *
 * A library script that contains a collection of basic library functions used
 * by the various components on the "ytpa" tool.
 */

( function(ytpa, $, undefined) {
    /// Public Members ///

    ytpa.lib = ytpa.lib || {};

    /**
     * Clamps the first value to the (min, max) range defined by the second
     * and third values.
     */
    ytpa.lib.clamp = function(value, min, max) {
        return Math.min(Math.max(value, min), max);
    };

    /**
     * Generates a number list from the first value to the second value where
     * each intermediate value is generated by taking the step given in third
     * value.
     *
     * @see http://stackoverflow.com/a/3895618
     */
    ytpa.lib.range = function(start, end, step) {
        var step = (step !== undefined) ? step : 1;

        var rangeArray = [];
        var currValue = start;
        while(currValue < end) {
            rangeArray.push(currValue);
            currValue += step;
        }

        return rangeArray;
    };

    /**
     * Creates a new list from two input lists of the same length where each
     * item is a pair containing the values from each list at the same index.
     */
    ytpa.lib.zip = function(list1, list2) {
        var list2 = (list2 !== undefined) ? list2 : list1;

        if(list1.length != list2.length)
            return [];

        var zipList = [];
        for(var lidx = 0; lidx < list1.length; ++lidx)
            zipList.push([list1[lidx], list2[lidx]]);

        return zipList;
    };


    /**
     * Generates and returns a string of the form "MM DD, YYYY" for the given date.
     */
    ytpa.lib.formatdate = function(date) {
        var monthName = monthNames[date.getMonth()];
        return `${monthName} ${date.getDate()}, ${date.getFullYear()}`;
    };

    /**
     * Generates a string from the argument string that represents the string
     * with all {} substrings replaced by successive arguments.
     *
     * @see http://stackoverflow.com/a/4673436/837221
     */
    ytpa.lib.formatstring = function(string) {
        var args = Array.prototype.slice.call(arguments, 1);
        return string.replace(/\{(\d+)\}/g, function(match, number) {
            return (typeof args[number] != 'undefined') ? args[number] : match;
        });
    };

    /**
     * Generates a string that represents a comma-separated version of the
     * given number.
     */
    ytpa.lib.formatnumber = function(number) {
        return numberFormatter.format(number);
    };

    /// Private Members ///

    /** An array containing the names of all the months for date formatting. */
    var monthNames = [ 'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December' ];

    /** The object responsible for formatting all of the numbers. */
    var numberFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 3});

}(window.ytpa = window.ytpa || {}, jQuery) );
